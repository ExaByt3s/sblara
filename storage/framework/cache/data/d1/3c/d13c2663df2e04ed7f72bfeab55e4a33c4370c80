1526974054s:13216:"PGRpdiBpZD0ibW1fZGl2XzI5Njk4NyI+PC9kaXY+CjxzY3JpcHQ+CiAgICAkKGZ1bmN0aW9uICgpIHsKCiAgICAgICAgJCgnI21tX2Rpdl8yOTY5ODcnKS5oaWdoY2hhcnRzKHsKICAgICAgICAgICAgY2hhcnQ6IHsKICAgICAgICAgICAgICAgIHpvb21UeXBlOiAneHknLAogICAgICAgICAgICAgICAgZGVmYXVsdFNlcmllc1R5cGU6ICdzcGxpbmUnLAogICAgICAgICAgICAgICAvLyBwbG90QmFja2dyb3VuZEltYWdlOiAnaHR0cDovL3d3dy5uZXcuc3RvY2tiYW5nbGFkZXNoLmNvbS9pbWcvY2hhcnRfbG9nby5naWYnLAogICAgICAgICAgICAgICAgZXZlbnRzOiB7CiAgICAgICAgICAgICAgICAgICAgbG9hZDogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyZXIuaW1hZ2UoJ2h0dHBzOi8vZGV2LnN0b2NrYmFuZ2xhZGVzaC5jb20vaW1nL2NoYXJ0X2xvZ28uZ2lmJywgdGhpcy5jaGFydFdpZHRoLzIuNSwgdGhpcy5jaGFydEhlaWdodC8yLjUsIDg2LCA2MykuYWRkKCk7ICAvLyBhZGQgaW1hZ2UodXJsLCB4LCB5LCB3LCBoKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBzaG93QXhlczogdHJ1ZSwKICAgICAgICAgICAgICAgIHNoYWRvdzogZmFsc2UsCiAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMSwKICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiAiI0Q1REFFMCIsCiAgICAgICAgICAgICAgICBzcGFjaW5nTGVmdDogMiwKICAgICAgICAgICAgICAgIHNwYWNpbmdSaWdodDogMgogICAgICAgICAgICAgICAgCgogICAgICAgICAgICB9LAogICAgICAgICAgICBleHBvcnRpbmc6IHsKICAgICAgICAgICAgICAgIGJ1dHRvbnM6IHsKICAgICAgICAgICAgICAgICAgICBjb250ZXh0QnV0dG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIG1lbnVJdGVtczogWwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0S2V5OiAnZG93bmxvYWRQTkcnLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uY2xpY2s6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5leHBvcnRDaGFydCh7ZmlsZW5hbWU6ICdTdG9ja0JhbmdsYWRlc2hfbWludXRlLWNoYXJ0J30pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICAgICAgdGV4dDogJ0FSQU1JVENFTScsCiAgICAgICAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAnMTJweCcKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBtYXJnaW46IDEKCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHN1YnRpdGxlOiB7CiAgICAgICAgICAgICAgICB0ZXh0OiAnVG90YWwgVm9sOjE1OTEzJywKICAgICAgICAgICAgICAgIHVzZUhUTUw6IHRydWUsCi8vZmxvYXRpbmc6IHRydWUsCiAgICAgICAgICAgICAgICB5OiAyMywKICAgICAgICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6ICcxMHB4JwogICAgICAgICAgICAgICAgfQovL21hcmdpbjogNTAKICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIHhBeGlzOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcmllczoKICAgICAgICAgICAgICAgICAgICAgICBbIjEwOjA0IiwiMTE6MzAiLCIxMTozMiIsIjExOjQzIiwiMTE6NDgiLCIxMTo1MSIsIjEyOjA2IiwiMTI6MTciLCIwMTowNiIsIjAxOjEzIiwiMDE6MjMiXQoKICAgICAgICAgICAgICAgICAgICAgICAgLy8nSmFuJywgJ0ZlYicsICdNYXInLCAnQXByJywgJ01heScsICdKdW4nLCdKdWwnLCAnQXVnJywgJ1NlcCcsICdPY3QnLCAnTm92JywgJ0RlYycKICAgICAgICAgICAgICAgICAgICAsCiAgICAgICAgICAgICAgICAgICAgdGlja0ludGVydmFsOiAxLAogICAgICAgICAgICAgICAgICAgIGNyb3NzaGFpcjogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICBsYWJlbHM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgcm90YXRpb246IC05MCwKICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ246ICdyaWdodCcKCiAgICAgICAgICAgICAgICAgICAgICAgIC8veDoxMCwKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICB5QXhpczogWwogICAgICAgICAgICAgICAgeyAvLyBQcmltYXJ5IHlBeGlzCgogICAgICAgICAgICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIC8qIHRleHQ6ICdQcmljZScsCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IEhpZ2hjaGFydHMuZ2V0T3B0aW9ucygpLmNvbG9yc1sxXQogICAgICAgICAgICAgICAgICAgICAgICAgfSovCiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6ICcnCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBpZDogJ3lfcHJpY2UnLAogICAgICAgICAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgeyAvLyBTZWNvbmRhcnkgeUF4aXMKICAgICAgICAgICAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiAnJwogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgbGFiZWxzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1hdDogJ3t2YWx1ZX0nLAogICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjMUJBMzlDJwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBpZDogJ3lfdm9sdW1lJywKICAgICAgICAgICAgICAgICAgICBvcHBvc2l0ZTogdHJ1ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICAgICAgICBzaGFyZWQ6IHRydWUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgY3JlZGl0czogewogICAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSwKICAgICAgICAgICAgICAgIGhyZWY6ICJodHRwOi8vd3d3LnN0b2NrYmFuZ2xhZGVzaC5jb20iLAogICAgICAgICAgICAgICAgdGV4dDogInN0b2NrYmFuZ2xhZGVzaC5jb20iLAogICAgICAgICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyM0NTcyQTcnCgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHBvc2l0aW9uOiB7CiAgICAgICAgICAgICAgICAgICAgYWxpZ246ICdyaWdodCcsCiAgICAgICAgICAgICAgICAgICAgdmVydGljYWxBbGlnbjogJ2JvdHRvbScKICAgICAgICAgICAgICAgICAgICAvKiAgeDogNSwKICAgICAgICAgICAgICAgICAgICAgeTogMTUqLwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgICAgICAgICAgICAvL2xheW91dDogJ3ZlcnRpY2FsJywKICAgICAgICAgICAgICAgIC8qICAgYWxpZ246ICdsZWZ0JywKICAgICAgICAgICAgICAgICB2ZXJ0aWNhbEFsaWduOiAnYm90dG9tJyovCiAgICAgICAgICAgICAgICAvKiB4OiAxMjAsCiAgICAgICAgICAgICAgICAgdmVydGljYWxBbGlnbjogJ3RvcCcsCiAgICAgICAgICAgICAgICAgeTogMTAwLCovCiAgICAgICAgICAgICAgICAvKiAgZmxvYXRpbmc6IHRydWUsCiAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAoSGlnaGNoYXJ0cy50aGVtZSAmJiBIaWdoY2hhcnRzLnRoZW1lLmxlZ2VuZEJhY2tncm91bmRDb2xvcikgfHwgJyNGRkZGRkYnKi8KICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2VyaWVzOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ1ZvbHVtZScsCiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2NvbHVtbicsCiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjOENDMTUyJywKICAgICAgICAgICAgICAgICAgICB5QXhpczogMCwKICAgICAgICAgICAgICAgICAgICBkYXRhOiBbeyJjb2xvciI6IiNFRjQ4MzYiLCJ5IjoxfSx7ImNvbG9yIjoiIzFCQTM5QyIsInkiOjUwMH0seyJjb2xvciI6IiNFRjQ4MzYiLCJ5IjoxMDAwfSx7ImNvbG9yIjoiIzFCQTM5QyIsInkiOjQwMH0seyJjb2xvciI6IiNBQ0I1QzMiLCJ5IjozMDB9LHsiY29sb3IiOiIjQUNCNUMzIiwieSI6MTAwfSx7ImNvbG9yIjoiI0FDQjVDMyIsInkiOjQ1MH0seyJjb2xvciI6IiNFRjQ4MzYiLCJ5IjoxOTUwfSx7ImNvbG9yIjoiI0FDQjVDMyIsInkiOjcxNjF9LHsiY29sb3IiOiIjMUJBMzlDIiwieSI6MTAwMH0seyJjb2xvciI6IiNBQ0I1QzMiLCJ5IjozMDUxfV0sCiAgICAgICAgICAgICAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZVN1ZmZpeDogJycKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAnUHJpY2UnLAogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzcGxpbmUnLAogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnIzI2QzI4MScsCiAgICAgICAgICAgICAgICAgICAgeUF4aXM6IDEsCiAgICAgICAgICAgICAgICAgICAgbWFya2VyOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJhZGl1czogMwogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgZGF0YTogW3siY29sb3IiOiIjRUY0ODM2IiwieSI6MjN9LHsiY29sb3IiOiIjMUJBMzlDIiwieSI6MjMuNn0seyJjb2xvciI6IiNFRjQ4MzYiLCJ5IjoyMy4yfSx7ImNvbG9yIjoiIzFCQTM5QyIsInkiOjIzLjV9LHsiY29sb3IiOiIjQUNCNUMzIiwieSI6MjMuNX0seyJjb2xvciI6IiNBQ0I1QzMiLCJ5IjoyMy41fSx7ImNvbG9yIjoiI0FDQjVDMyIsInkiOjIzLjV9LHsiY29sb3IiOiIjRUY0ODM2IiwieSI6MjMuM30seyJjb2xvciI6IiNBQ0I1QzMiLCJ5IjoyMy4zfSx7ImNvbG9yIjoiIzFCQTM5QyIsInkiOjIzLjR9LHsiY29sb3IiOiIjQUNCNUMzIiwieSI6MjMuNH1dLAogICAgICAgICAgICAgICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVTdWZmaXg6ICcnCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICB0eXBlOiAncGllJywKICAgICAgICAgICAgICAgICAgICBuYW1lOiAnMjAxOC0wNS0xNicsCiAgICAgICAgICAgICAgICAgICAgZGF0YTogW3sKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ0J1bGwgVm9sJywKICAgICAgICAgICAgICAgICAgICAgICAgeTogOTQ3MCwKICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjMUJBMzlDJyAvLyBiZWFyCiAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnQmVhciBWb2wnLAogICAgICAgICAgICAgICAgICAgICAgICB5OiA0OTYxLAogICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyNFRjQ4MzYnIC8vIEJlYXIgY29sb3IKICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdOZXV0cmFsIFZvbCcsCiAgICAgICAgICAgICAgICAgICAgICAgIHk6IDQxOTUsCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnI0FDQjVDMycvLyBOZXV0cmFsCiAgICAgICAgICAgICAgICAgICAgfV0sCiAgICAgICAgICAgICAgICAgICAgY2VudGVyOiBbNDAsIDEwXSwKICAgICAgICAgICAgICAgICAgICBzaXplOiA0MCwKICAgICAgICAgICAgICAgICAgICBzaG93SW5MZWdlbmQ6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgIGRhdGFMYWJlbHM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogZmFsc2UKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICB0eXBlOiAncGllJywKICAgICAgICAgICAgICAgICAgICBuYW1lOiAnMjAxOC0wNS0xNycsCiAgICAgICAgICAgICAgICAgICAgZGF0YTogW3sKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ0J1bGwgVm9sJywKICAgICAgICAgICAgICAgICAgICAgICAgeTogOTcyNCwKICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjMUJBMzlDJyAvLyBiZWFyCiAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnQmVhciBWb2wnLAogICAgICAgICAgICAgICAgICAgICAgICB5OiA2OTU2LAogICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyNFRjQ4MzYnIC8vIEJlYXIgY29sb3IKICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdOZXV0cmFsIFZvbCcsCiAgICAgICAgICAgICAgICAgICAgICAgIHk6IDE2MTIwLAogICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyNBQ0I1QzMnLy8gTmV1dHJhbAogICAgICAgICAgICAgICAgICAgIH1dLAogICAgICAgICAgICAgICAgICAgIGNlbnRlcjogWzgwLCAxMF0sCiAgICAgICAgICAgICAgICAgICAgc2l6ZTogNDAsCiAgICAgICAgICAgICAgICAgICAgc2hvd0luTGVnZW5kOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICBkYXRhTGFiZWxzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3BpZScsCiAgICAgICAgICAgICAgICAgICAgbmFtZTogJzIwMTgtMDUtMjAnLAogICAgICAgICAgICAgICAgICAgIGRhdGE6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdCdWxsIFZvbCcsCiAgICAgICAgICAgICAgICAgICAgICAgIHk6IDQwMDAsCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnIzFCQTM5QycgLy8gYmVhcgogICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ0JlYXIgVm9sJywKICAgICAgICAgICAgICAgICAgICAgICAgeTogODAwMCwKICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjRUY0ODM2JyAvLyBCZWFyIGNvbG9yCiAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnTmV1dHJhbCBWb2wnLAogICAgICAgICAgICAgICAgICAgICAgICB5OiAzMjIwLAogICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyNBQ0I1QzMnLy8gTmV1dHJhbAogICAgICAgICAgICAgICAgICAgIH1dLAogICAgICAgICAgICAgICAgICAgIGNlbnRlcjogWzEyMCwgMTBdLAogICAgICAgICAgICAgICAgICAgIHNpemU6IDQwLAogICAgICAgICAgICAgICAgICAgIHNob3dJbkxlZ2VuZDogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgZGF0YUxhYmVsczogewogICAgICAgICAgICAgICAgICAgICAgICBlbmFibGVkOiBmYWxzZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdwaWUnLAogICAgICAgICAgICAgICAgICAgIG5hbWU6ICcyMDE4LTA1LTIxJywKICAgICAgICAgICAgICAgICAgICBkYXRhOiBbewogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnQnVsbCBWb2wnLAogICAgICAgICAgICAgICAgICAgICAgICB5OiA2NTAsCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnIzFCQTM5QycgLy8gYmVhcgogICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ0JlYXIgVm9sJywKICAgICAgICAgICAgICAgICAgICAgICAgeTogMTIwMCwKICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjRUY0ODM2JyAvLyBCZWFyIGNvbG9yCiAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnTmV1dHJhbCBWb2wnLAogICAgICAgICAgICAgICAgICAgICAgICB5OiA2NDIwLAogICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyNBQ0I1QzMnLy8gTmV1dHJhbAogICAgICAgICAgICAgICAgICAgIH1dLAogICAgICAgICAgICAgICAgICAgIGNlbnRlcjogWzE2MCwgMTBdLAogICAgICAgICAgICAgICAgICAgIHNpemU6IDQwLAogICAgICAgICAgICAgICAgICAgIHNob3dJbkxlZ2VuZDogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgZGF0YUxhYmVsczogewogICAgICAgICAgICAgICAgICAgICAgICBlbmFibGVkOiBmYWxzZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdwaWUnLAogICAgICAgICAgICAgICAgICAgIG5hbWU6ICcyMDE4LTA1LTIyJywKICAgICAgICAgICAgICAgICAgICBkYXRhOiBbewogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnQnVsbCBWb2wnLAogICAgICAgICAgICAgICAgICAgICAgICB5OiAxOTAwLAogICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyMxQkEzOUMnIC8vIGJlYXIKICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdCZWFyIFZvbCcsCiAgICAgICAgICAgICAgICAgICAgICAgIHk6IDI5NTEsCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnI0VGNDgzNicgLy8gQmVhciBjb2xvcgogICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ05ldXRyYWwgVm9sJywKICAgICAgICAgICAgICAgICAgICAgICAgeTogMTEwNjIsCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnI0FDQjVDMycvLyBOZXV0cmFsCiAgICAgICAgICAgICAgICAgICAgfV0sCiAgICAgICAgICAgICAgICAgICAgY2VudGVyOiBbMjAwLCAxMF0sCiAgICAgICAgICAgICAgICAgICAgc2l6ZTogNDAsCiAgICAgICAgICAgICAgICAgICAgc2hvd0luTGVnZW5kOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICBkYXRhTGFiZWxzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICBdLAogICAgICAgICAgICByZXNwb25zaXZlOiB7CiAgICAgICAgICAgICAgICBydWxlczogW3sKICAgICAgICAgICAgICAgICAgICBjb25kaXRpb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgbWF4V2lkdGg6IDUwMAogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICB9CiAgICAgICAgfSk7CgoKICAgICAgIAoKICAgIH0pOwoKPC9zY3JpcHQ+Cg==";