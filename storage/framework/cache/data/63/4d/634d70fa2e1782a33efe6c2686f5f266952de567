1526975648s:16328:"<div class="portlet light">
<div class="portlet-body">


    <div class="scroller" style="height:300px" data-rail-visible="1" data-always-visible="1"
         data-rail-color="yellow" data-handle-color="#a1b2bd">
        <div class="mt-element-list">
            <div class="mt-list-head list-simple ext-1 font-white bg-green-sharp">
                <div class="list-head-title-container">
                    <div class="list-date">22-05-2018</div>
                    <h3 class="list-title">Significant trade at 01:51</h3>
                </div>
            </div>
            <div class="mt-list-container list-simple ext-1">
                <ul>

                        
                        <li class="mt-list-item done">
                            <div class="list-icon-container">
                                                                    <span class="inlinesparkline_trade"  sparklineColor ="green">47.4, 47.5, 47.7, 47.7, 47.8, 48.2, 48.4, 47.7, 47.7, 47.6, 47.5, 47.4, 47.2, 47.2, 47.2, 47.6</span>
                                                            </div>
                            <div class="list-datetime-c">

                                                                    <span class="inlinesparkline_trade" sparkType="bar" sparkbarcolor ="green">25, 17, 59, 95, 60, 89, 14, 27, 24, 39, 43, 23, 48, 104</span>

                                
                            </div>
                            <div class="list-item-content">
                                <h3 class="uppercase">
                                    <a target="_blank" href="https://dev.stockbangladesh.com/company-details/30194">INTRACO</a> (104 trades)
                                </h3>
                            </div>

                        </li>
                    
                        <li class="mt-list-item done">
                            <div class="list-icon-container">
                                                                    <span class="inlinesparkline_trade"  sparklineColor ="green">55.5, 55.5, 55.5, 55.5, 55.7, 55.5, 55.5, 55.6, 55.5, 55.7, 55.4, 55.4, 55.2, 55.3, 55.2, 55.2</span>
                                                            </div>
                            <div class="list-datetime-c">

                                                                    <span class="inlinesparkline_trade" sparkType="bar" sparkbarcolor ="green">0, 1, 6, 16, 12, 26, 23, 9, 13, 30, 12, 19, 14, 72</span>

                                
                            </div>
                            <div class="list-item-content">
                                <h3 class="uppercase">
                                    <a target="_blank" href="https://dev.stockbangladesh.com/company-details/267">SINOBANGLA</a> (72 trades)
                                </h3>
                            </div>

                        </li>
                    
                        <li class="mt-list-item done">
                            <div class="list-icon-container">
                                                                    <span class="inlinesparkline_trade"  sparklineColor ="green">333.8, 333.8, 333.8, 333.9, 336.5, 336.9, 335, 336, 335.2, 335.2, 335.2, 336, 336, 336, 335.9, 336.2</span>
                                                            </div>
                            <div class="list-datetime-c">

                                                                    <span class="inlinesparkline_trade" sparkType="bar" sparkbarcolor ="green">0, 7, 38, 7, 2, 2, 17, 0, 0, 6, 7, 8, 32, 66</span>

                                
                            </div>
                            <div class="list-item-content">
                                <h3 class="uppercase">
                                    <a target="_blank" href="https://dev.stockbangladesh.com/company-details/216">RAHIMTEXT</a> (66 trades)
                                </h3>
                            </div>

                        </li>
                    
                        <li class="mt-list-item done">
                            <div class="list-icon-container">
                                                                    <span class="inlinesparkline_trade"  sparklineColor ="red">108.4, 108.4, 108.4, 108.4, 108.2, 108.3, 108.1, 108, 107.9, 107.9, 107.9, 108, 107.3, 107.2, 107.5, 107</span>
                                                            </div>
                            <div class="list-datetime-c">

                                                                    <span class="inlinesparkline_trade" sparkType="bar" sparkbarcolor ="red">0, 0, 15, 2, 53, 43, 2, 1, 7, 20, 31, 6, 11, 64</span>
                                
                            </div>
                            <div class="list-item-content">
                                <h3 class="uppercase">
                                    <a target="_blank" href="https://dev.stockbangladesh.com/company-details/193">NTLTUBES</a> (64 trades)
                                </h3>
                            </div>

                        </li>
                    
                        <li class="mt-list-item done">
                            <div class="list-icon-container">
                                                                    <span class="inlinesparkline_trade"  sparklineColor ="red">39.3, 39.3, 39.2, 39.1, 39, 39, 38.8, 38.7, 38.7, 38.7, 38.5, 38.7, 38.5, 38.5, 38.7, 38.4</span>
                                                            </div>
                            <div class="list-datetime-c">

                                                                    <span class="inlinesparkline_trade" sparkType="bar" sparkbarcolor ="red">10, 4, 29, 7, 16, 46, 4, 15, 37, 4, 7, 1, 10, 59</span>
                                
                            </div>
                            <div class="list-item-content">
                                <h3 class="uppercase">
                                    <a target="_blank" href="https://dev.stockbangladesh.com/company-details/114">HRTEX</a> (59 trades)
                                </h3>
                            </div>

                        </li>
                    
                        <li class="mt-list-item done">
                            <div class="list-icon-container">
                                                                    <span class="inlinesparkline_trade"  sparklineColor ="red">313, 315, 315, 313.5, 317.4, 317.4, 316.8, 313.4, 313.6, 313.5, 313.2, 313, 313.1, 313.1, 313.2, 312.1</span>
                                                            </div>
                            <div class="list-datetime-c">

                                                                    <span class="inlinesparkline_trade" sparkType="bar" sparkbarcolor ="red">0, 7, 1, 0, 2, 11, 2, 3, 9, 13, 2, 0, 5, 57</span>
                                
                            </div>
                            <div class="list-item-content">
                                <h3 class="uppercase">
                                    <a target="_blank" href="https://dev.stockbangladesh.com/company-details/178">NORTHERN</a> (57 trades)
                                </h3>
                            </div>

                        </li>
                    
                        <li class="mt-list-item done">
                            <div class="list-icon-container">
                                                                    <span class="inlinesparkline_trade"  sparklineColor ="green">33.8, 33.8, 33.8, 33.8, 34, 34, 33.8, 33.7, 33.8, 33.8, 33.9, 33.9, 33.9, 33.9, 34.2, 34.3</span>
                                                            </div>
                            <div class="list-datetime-c">

                                                                    <span class="inlinesparkline_trade" sparkType="bar" sparkbarcolor ="green">0, 0, 2, 8, 12, 3, 1, 1, 3, 5, 3, 3, 27, 54</span>

                                
                            </div>
                            <div class="list-item-content">
                                <h3 class="uppercase">
                                    <a target="_blank" href="https://dev.stockbangladesh.com/company-details/98">FINEFOODS</a> (54 trades)
                                </h3>
                            </div>

                        </li>
                    
                        <li class="mt-list-item done">
                            <div class="list-icon-container">
                                                                    <span class="inlinesparkline_trade"  sparklineColor ="green">26.7, 26.5, 26.7, 26.7, 26.8, 26.9, 26.7, 26.7, 26.7, 26.7, 26.7, 26.8, 26.9, 26.9, 26.9, 26.5</span>
                                                            </div>
                            <div class="list-datetime-c">

                                                                    <span class="inlinesparkline_trade" sparkType="bar" sparkbarcolor ="green">3, 0, 14, 4, 7, 47, 0, 0, 1, 13, 16, 0, 14, 51</span>

                                
                            </div>
                            <div class="list-item-content">
                                <h3 class="uppercase">
                                    <a target="_blank" href="https://dev.stockbangladesh.com/company-details/30002">HFL</a> (51 trades)
                                </h3>
                            </div>

                        </li>
                    
                        <li class="mt-list-item done">
                            <div class="list-icon-container">
                                                                    <span class="inlinesparkline_trade"  sparklineColor ="green">9.9, 9.9, 9.9, 9.9, 9.9, 9.9, 9.8, 10, 10, 10, 10.1, 10.1, 10.2, 10.2, 10.2, 10.4</span>
                                                            </div>
                            <div class="list-datetime-c">

                                                                    <span class="inlinesparkline_trade" sparkType="bar" sparkbarcolor ="green">0, 0, 0, 1, 11, 5, 0, 0, 7, 18, 2, 0, 12, 51</span>

                                
                            </div>
                            <div class="list-item-content">
                                <h3 class="uppercase">
                                    <a target="_blank" href="https://dev.stockbangladesh.com/company-details/30019">SEMLLECMF</a> (51 trades)
                                </h3>
                            </div>

                        </li>
                    
                        <li class="mt-list-item done">
                            <div class="list-icon-container">
                                                                    <span class="inlinesparkline_trade"  sparklineColor ="red">10.7, 10.7, 10.7, 10.7, 10.7, 10.8, 10.8, 10.8, 10.8, 10.8, 10.8, 10.8, 10.8, 10.8, 10.8, 11</span>
                                                            </div>
                            <div class="list-datetime-c">

                                                                    <span class="inlinesparkline_trade" sparkType="bar" sparkbarcolor ="red">0, 0, 18, 5, 3, 2, 1, 0, 1, 0, 2, 5, 0, 50</span>
                                
                            </div>
                            <div class="list-item-content">
                                <h3 class="uppercase">
                                    <a target="_blank" href="https://dev.stockbangladesh.com/company-details/99">FIRSTSBANK</a> (50 trades)
                                </h3>
                            </div>

                        </li>
                    
                </ul>
            </div>
        </div>
    </div>


</div>
</div>


<script src="https://dev.stockbangladesh.com/metronic_custom/jquery.sparkline.min.js"></script>
<script>
 $('.inlinesparkline_trade').sparkline('html', {
            enableTagOptions: true,
            disableHiddenCheck: true,

            height: '20px'
            //width: '100px'
        });
</script>
";