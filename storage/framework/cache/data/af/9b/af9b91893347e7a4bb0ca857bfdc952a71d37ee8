1526974054s:38660:"<div class="portfolio-content portfolio-3">
    <div class="clearfix">

        <div id="js-filters-lightbox-gallery2" class="cbp-l-filters-button cbp-l-filters-left">
        <div data-filter="*" class="cbp-filter-item-active cbp-filter-item btn blue btn-outline uppercase">All</div>
                    <div data-filter=".ARAMITCEM" class="cbp-filter-item btn blue btn-outline uppercase">ARAMITCEM</div>
                    <div data-filter=".q3" class="cbp-filter-item btn blue btn-outline uppercase">Q3</div>
                    <div data-filter=".bod" class="cbp-filter-item btn blue btn-outline uppercase">Board</div>
                    <div data-filter=".q2" class="cbp-filter-item btn blue btn-outline uppercase">Q2</div>
                    <div data-filter=".q1" class="cbp-filter-item btn blue btn-outline uppercase">Q1</div>
                    <div data-filter=".dividend" class="cbp-filter-item btn blue btn-outline uppercase">Dividend</div>
        
        </div>
    </div>
    <div class="scroller" style="height:400px" data-rail-visible="1" data-rail-color="yellow" data-handle-color="#a1b2bd">
        <div id="js-grid-lightbox-gallery" class="cbp">

                    

                <div class="cbp-item ARAMITCEM q3">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 30-04-2018 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">(Q3 Un-audited): EPS was Tk. (1.24) for January-March 2018 as against Tk. (0.92) for January-March 2017; EPS was Tk. (3.79) for July 2017-March 2018 as against Tk. (1.58) for July 2016-March 2017. NOCFPS was Tk. 0.10 for July 2017-March 2018 as against Tk. (17.50) for July 2016-March 2017. NAV per share was Tk. 7.36 as on March 31, 2018 and Tk. 11.16 as on June 30, 2017. </br>ARAMITCEM q3</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM q3 bod">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 22-04-2018 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">As per Regulation 16(1) of the Dhaka Stock Exchange (Listing) Regulations, 2015, the Company has informed that a meeting of the Board of Directors will be held on April 29, 2018 at 12:30 PM to consider, among others, un-audited financial statements of the Company for the Third Quarter (Q3) period ended on March 31, 2018. </br>ARAMITCEM q3 bod</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM q2">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 31-01-2018 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">(Q2 Un-audited): EPS was Tk. (0.82) for October-December, 2017 as against Tk. (0.39) for October-December, 2016; EPS was Tk. (2.55) for July-December, 2017 as against Tk. (0.66) for July-December, 2016. NOCFPS was Tk. (3.86) for July-December, 2017 as against Tk. (3.29) for July-December, 2016. NAV per share was Tk. 8.60 as on December 31, 2017 and Tk. 11.16 as on June 30, 2017. </br>ARAMITCEM q2</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM q2 bod">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 23-01-2018 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">As per Regulation 16(1) of the Dhaka Stock Exchange (Listing) Regulations, 2015, the Company has informed that a meeting of the Board of Directors will be held on January 30, 2018 at 4:00 PM to consider, among others, un-audited financial statements of the Company for the Second Quarter (Q2) period ended on December 31, 2017. </br>ARAMITCEM q2 bod</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 11-12-2017 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">In response to a DSE query dated December 10, 2017, the Company has informed that there is no undisclosed price sensitive information of the Company for recent unusual price hike of shares. </br>ARAMITCEM</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM q1">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 10-12-2017 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">(Repeat): (Q1 Un-audited): EPS was Tk. (1.73) for July-September, 2017 as against Tk. (0.27) for July-September, 2016; NOCFPS was Tk. (5.58) for July-September, 2017 as against Tk. (1.40) for July-September, 2016. NAV per share was Tk. 9.42 as on September 30, 2017 and Tk. 11.16 as on June 30, 2017. </br>ARAMITCEM q1</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 16-11-2017 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">Trading of the shares of the Company will resume on 19.11.2017 after record date. </br>ARAMITCEM</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 15-11-2017 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">Trading of the shares of the Company will remain suspended on record date i.e., 16.11.2017. </br>ARAMITCEM</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 02-11-2017 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">Trading of the shares of the Company will be allowed only in the Spot Market and Block transactions will also be settled as per Spot settlement cycle from 05.11.2017 to 15.11.2017. Trading of the shares of the Company will remain suspended on record date i.e., 16.11.2017. </br>ARAMITCEM</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM q1">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 29-10-2017 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">(Q1 Un-audited): EPS was Tk. (1.73) for July-September, 2017 as against Tk. (0.27) for July-September, 2016; NOCFPS was Tk. (5.58) for July-September, 2017 as against Tk. (1.40) for July-September, 2016. NAV per share was Tk. 9.42 as on September 30, 2017 and Tk. 11.16 as on June 30, 2017. </br>ARAMITCEM q1</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 29-10-2017 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">DSE NEWS: The Stock Brokers and Merchant Bankers are requested to abstain from providing loan facilities to purchase any security of Aramit Cement Limited with effect from October 30, 2017 as per BSEC Directive No. SEC/CMRRCD/2001-43/169 dated October 01, 2009. </br>ARAMITCEM</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM dividend">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 29-10-2017 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">The Company will be placed in &#039;Z&#039; category from existing &#039;A&#039; category with effect from October 30, 2017 as the Company has recommended No dividend for the year ended on June 30, 2017. </br>ARAMITCEM dividend</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 29-10-2017 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">There will be no price limit on the trading of the shares of the Company today (29.10.2017) following its corporate declaration. </br>ARAMITCEM</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM bod dividend">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 29-10-2017 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">The Board of Directors recommended No dividend for the year ended on June 30, 2017. Date of AGM: 11.12.2017, Time: 12:00 noon, Venue: Chittagong Club Limited, S.S. Khaled Road, Chittagong. Record date: 16.11.2017. The Company has also reported EPS of Tk. (2.97), NAV per share of Tk. 11.16 and NOCFPS of Tk. (14.14) for the year ended on June 30, 2017 which was Tk. 0.84, Tk. 14.33 and Tk. (8.49) respectively for the 18 months period from January 01, 2015 to June 30, 2016. </br>ARAMITCEM bod dividend</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 26-10-2017 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">Credit Rating Information and Services Limited (CRISL) has rated the Company as &quot;BBB+&quot; in the long term and &quot;ST-4&quot; in the short term along with stable outlook in consideration of its audited financials up to June 30, 2016, unaudited financials up to June 30, 2017 and other relevant quantitative as well as qualitative information up to the date of rating declaration. </br>ARAMITCEM</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM q1 bod">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 19-10-2017 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">As per Regulation 16(1) of the Dhaka Stock Exchange (Listing) Regulations, 2015, the Company has informed that a meeting of the Board of Directors will be held on October 28, 2017 at 4:00 PM to consider, among others, un-audited financial statements of the Company for the First Quarter (Q1) period ended on September 30, 2017. </br>ARAMITCEM q1 bod</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM bod">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 19-10-2017 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">As per Regulation 19(1) of the Dhaka Stock Exchange (Listing) Regulations, 2015, the Company has informed that a meeting of the Board of Directors will be held on October 28, 2017 at 4:00 PM to consider, among others, audited financial statements of the Company for the year ended on June 30, 2017. </br>ARAMITCEM bod</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 11-09-2017 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">In response to a DSE query dated September 10, 2017, the Company has informed that there is no undisclosed price sensitive information of the Company for recent unusual price hike. </br>ARAMITCEM</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM q3">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 30-04-2017 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">(Q3 Un-audited): EPS was Tk. (0.92) for January-March, 2017 as against Tk. 0.24 for January-March, 2016; EPS was Tk. (1.58) for July, 2016-March, 2017 as against Tk. 0.28 for July, 2015-March, 2016. NOCFPS was Tk. (17.50) for July, 2016-March, 2017 as against Tk. (1.50) for July, 2015-March, 2016. NAV per share was Tk. 12.55 as of March 31, 2017 and Tk. 14.33 as of June 30, 2016. </br>ARAMITCEM q3</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM q3 bod">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 20-04-2017 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">As per Regulation 16(1) of the Dhaka Stock Exchange (Listing) Regulations, 2015, the Company has informed that a meeting of the Board of Directors will be held on April 29, 2017 at 8:00 PM to consider, among others, un-audited financial statements of the Company for the Third Quarter (Q3) period ended on March 31, 2017. </br>ARAMITCEM q3 bod</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM q2">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 31-01-2017 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">(Q2 Un-audited): EPS was Tk. (0.39) for October-December, 2016 as against Tk. 0.18 for October-December, 2015; EPS was Tk. (0.66) for July-December, 2016 as against Tk. 0.04 for July-December, 2015. NOCFPS was Tk. (3.29) for July-December, 2016 as against Tk. (3.73) for July-December, 2015. NAV per share was Tk. 13.46 as of December 31, 2016 and Tk. 14.33 as of June 30, 2016. </br>ARAMITCEM q2</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM q2 bod">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 29-01-2017 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">As per Regulation 16(1) of the Dhaka Stock Exchange (Listing) Regulations, 2015, the Company has informed that a meeting of the Board of Directors will be held on January 30, 2017 at 4:00 PM to consider, among others, un-audited financial statements of the Company for the Second Quarter (Q2) period ended on December 31, 2016. </br>ARAMITCEM q2 bod</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM dividend">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 15-01-2017 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">The Company has informed that it has disbursed final cash dividend for the 6 months period ended on June 30, 2016 to the respective shareholders&#039; mailing address. Earlier declared interim dividend has already been disbursed. </br>ARAMITCEM dividend</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 29-12-2016 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">The Company has informed that in compliance to the notification of BSEC, the commercial production of Unit-2, having a capacity of 1,000 M. Tons per day will commence from January 01, 2017 in full swing. </br>ARAMITCEM</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 17-11-2016 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">Trading of the shares of the Company will resume on 20.11.2016 after record date. </br>ARAMITCEM</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 16-11-2016 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">Trading of the shares of the Company will remain suspended on record date i.e., 17.11.2016. </br>ARAMITCEM</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 14-11-2016 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">Trading of the shares of the Company will be allowed only in the Spot Market and Block transactions will also be settled as per Spot settlement cycle with cum benefit from 15.11.2016 to 16.11.2016. Trading of the shares of the Company will remain suspended on record date i.e., 17.11.2016. </br>ARAMITCEM</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM q1">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 30-10-2016 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">(Q1 Un-audited): EPS was Tk. (0.27) for July-September, 2016 as against Tk. (0.14) for July-September, 2015; NOCFPS was Tk. (1.40) for July-September, 2016 as against Tk. (5.48) for July-September, 2015. NAV per share was Tk. 14.05 as of September 30, 2016 and Tk. 14.33 as of June 30, 2016. </br>ARAMITCEM q1</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 30-10-2016 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">There will be no price limit on the trading of the shares of the Company today (30.10.2016) following its corporate declaration. </br>ARAMITCEM</p>
                      </div>
                </div>
            

                <div class="cbp-item ARAMITCEM">
                <div class="mt-element-ribbon bg-grey-steel">
                      <div class="ribbon ribbon-right ribbon-clip ribbon-shadow ribbon-round ribbon-border-dash-hor ribbon-color-info uppercase">
                              <div class="ribbon-sub ribbon-clip ribbon-right"></div> 30-10-2016 </div>
                              <div class="ribbon ribbon-border-dash ribbon-shadow ribbon-color-default uppercase">ARAMITCEM</div>
                          <p class="ribbon-content">(continuation news of ARAMITCEM):

The Company has also reported EPS of Tk. 0.84, NAV per share of Tk. 14.33 and NOCFPS of Tk. (8.49) for the 18 months period from January 01, 2015 to June 30, 2016.(end) </br>ARAMITCEM</p>
                      </div>
                </div>
                            </div>
    </div>


</div>
<div class="scroller-footer">
<div class="btn-arrow-link pull-right">
    <a target="_blank" href="/news/search?keyword=&amp;instrument_id=42&amp;from_date=&amp;to_date=">See All ARAMITCEM News</a>
    <i class="icon-arrow-right"></i>
</div>
</div>

<link href="https://dev.stockbangladesh.com/metronic/assets/global/plugins/cubeportfolio/css/cubeportfolio.css" rel="stylesheet" type="text/css" />
<link href="https://dev.stockbangladesh.com/metronic/assets/pages/css/portfolio.min.css" rel="stylesheet" type="text/css" />
<script src="https://dev.stockbangladesh.com/metronic/assets/global/plugins/cubeportfolio/js/jquery.cubeportfolio.min.js" type="text/javascript"></script>
<script src="https://dev.stockbangladesh.com/metronic/assets/pages/scripts/portfolio-3.min.js" type="text/javascript"></script>
<script type="text/javascript">
$('.scroller').slimScroll({
  height: '400px'
})
</script>
";